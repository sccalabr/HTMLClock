window.onload = getTemp();
var LOGGER = 1
var user = ""
var userId = -1

function getTemp() {

   $.ajax({
      url: "https://api.forecast.io/forecast/0401928fcd4a0d65bc87e1d01a153c09/35.300399,-120.662362?callback=?",
      data: {},
      type: "GET",
      dataType: "json",
      success: function(json) {
      if (LOGGER && 0) {
         console.log(json["daily"]["summary"])
         console.log(json["daily"]["icon"])
         console.log("img/" + json["daily"]["icon"] + ".png")
         console.log(json["daily"]["temperatureMax"])
         console.log(json["daily"]["data"][0]["temperatureMax"])
      }
         $("#forecastLabel").html(json["daily"]["summary"])
       //  console.log($("#forecastIcon").attr("src"))
         $("#forecastIcon").attr("src", "img/" + json["daily"]["icon"] + ".png")
       //  console.log($("#forecastIcon").attr("src"))
         
         var temp = json["daily"]["data"][0]["temperatureMax"]
         
         if(temp >= 90) {
            $("body").addClass("hot")
         }
         else if(temp >= 80) {
            $("body").addClass("warm")
         }
         else if(temp >= 70) {
            $("body").addClass("nice")
         }
         else if(temp >= 60) {
            $("body").addClass("chilly")
         }
         else {
            $("body").addClass("cold")
         }
      },
      error: function(xhr, status, errorThrown) {
         console.log("I Failed :(!")
         alert(errorThrown)
      }
   });
}

function showAlarmPopUp() {
   if(LOGGER) {
      console.log("showAlarmPopUp")
   }
   
   $("#mask").removeClass("hide")
   $("#popup").removeClass("hide")
}

function hideAlarmPopUp() {
   console.log("hideAlarmPopUp")
   $("#mask").addClass("hide")
   $("#popup").addClass("hide")
}

function addAlarm() {
   var hours = $("#hours option:selected").text()
   var mins = $("#mins option:selected").text()
   var ampm = $("#ampm option:selected").text()
   var alarmName = $("#alarmName").val() + " "
   var time = hours + ":" + mins + ampm  
   
   if(LOGGER) {
      console.log($("#alarmName"))
      console.log("ADD ALARM: " + hours + " " + mins + " " + ampm + " =>" + alarmName)
   }

   var AlarmObject = Parse.Object.extend("Alarm");
   var alarmObject = new AlarmObject();
     alarmObject.save({"time": time,"alarmName": alarmName, "user": userId}, {
     success: function(object) {
         if(LOGGER) {
            console.log("getAllAlarms Success")
         }
        
       insertAlarm(object["attributes"]["time"].substring(0,2), object["attributes"]["time"].substring(3,5), object["attributes"]["time"].substring(5), object["attributes"]["alarmName"], alarmObject)
       hideAlarmPopUp() 
     }
   });
}

function deleteAlarmPopUp(button) {
   if(LOGGER) {
      console.log("deleteAlarmPopUp")
   }
   
   var AlarmObject = Parse.Object.extend("Alarm");
   var query = new Parse.Query(AlarmObject);
   
   if(LOGGER) {
      console.log(this.document.activeElement.id)
   }
   
   query.get(this.document.activeElement.id, {
     success: function(results) {
       // The object was retrieved successfully.
       results.destroy({});
       

     },
     error: function(object, error) {
       console.log("Something broke");
     }
   });
   $("#" + this.document.activeElement.id).parent().parent().remove(); 
}

function insertAlarm(hours, mins, ampm, alarmName, results) {
   
   if(LOGGER) {
      console.log("insertAlarmPopUp")
      console.log(hours + " " + mins + " " + ampm + " " + alarmName)
   }
   
   if(hours !== undefined && mins !== undefined && ampm !== undefined && alarmName !== undefined) {
   
      //console.log("#mask" + $("#mask").html())
     
      $("#mask").addClass("hide")
      $("#popup").addClass("hide")

      if(LOGGER) {
         console.log($("#mask").hasClass("hide"))
         console.log($("#popup").hasClass("hide"))
      }
      
      var div = document.createElement("div");
      $(div).addClass("flexable")
      
      var div2 = document.createElement("div");
      $(div2).addClass("name")
      $(div2).html(alarmName)
      
      var div3 = document.createElement("div");
      $(div3).addClass("time")
      $(div3).html(" " +  hours + " : " + mins+" " + ampm + " " + "<input id ='"+ results['id'] + "' type='button' value='Delete Alarm' class='button'  onclick='deleteAlarmPopUp()'/>");

      $(div).append(div2)
      $(div).append(div3)
      $("#alarms").append($(div))
      
      if(LOGGER) {    
         console.log("alarms " + $("#alarms").html())
         console.log("div " + $(div).html())
         console.log("div2 " +$(div2).html())
         console.log("div3 " +$(div3).html())
      }
   }
}

function getAllAlarms(userId) {
   if(LOGGER) { 
      console.log("getAllAlarms")
   }
   
   Parse.initialize("apWKb4OIUYzyMki7S8KLGLM9w1lhhGUhBZsXC322", "ahKIZyhAtZ30ZHI4uuFNPlXRAmL9Rm2bIDkXR1j4")

   var AlarmObject = Parse.Object.extend("Alarm");

       var query = new Parse.Query(AlarmObject);
       query.find({
           success: function(results) {
               console.log(results + " " + results.length)
               for (var i = 0; i < results.length; i++) { 
                  if(userId == results[i]["attributes"]){
                     insertAlarm(results[i]["attributes"]["time"].substring(0,2), results[i]["attributes"]["time"].substring(3,5), results[i]["attributes"]["time"].substring(5), results[i]["attributes"]["alarmName"], results[i])
                  }
               }
               
           }
         });
}

function signinCallback(authResult) {
  if (authResult['status']['signed_in']) {
    // Update the app to reflect a signed in user
    // Hide the sign-in button now that the user is authorized, for example:
      document.getElementById('signinButton').setAttribute('style', 'display: none')
      gapi.client.load('plus','v1', function(){ 
          var request = gapi.client.plus.people.get({'userId' : 'me'});
          request.execute(function(response) {
              console.log('ID: ' + response.id);
              console.log('Display Name: ' + response.displayName);
              console.log('Image URL: ' + response.image.url);
              console.log('Profile URL: ' + response.url);
              user = response.displayName;
              userId = response.id;
              $(".clocks").after("<h2> Signed in as: " + user + "</h2>")
          });
      });
    
    $(this).load(getAllAlarms(userId));
  } else {
    // Update the app to reflect a signed out user
    // Possible error values:
    //   "user_signed_out" - User is signed-out
    //   "access_denied" - User denied access to your app
    //   "immediate_failed" - Could not automatically log in the user
    console.log('Sign-in state: ' + authResult['error']);
    user = ""
  }
}


